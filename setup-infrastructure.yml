AWSTemplateFormatVersion: '2010-09-09'
Description: AWS core resources to create an ECS cluster spanning public and private subnet public facing load balancers.

Mappings:
  SubnetConfig:
    VPC:
      CIDR: '10.0.0.0/16'
    PublicOne:
      CIDR: '10.0.0.0/24'
    PublicTwo:
      CIDR: '10.0.0.0/24'
    PrivateOne:
      CIDR: '10.0.0.0/24'
    PrivateTwo:
      CIDR: '10.0.0.0/24'
  Resources:
    VPC:
      Type: AWS::EC2::VPC
      Properties:
        EnableDnsSupport: true
        EnableDnsHostnames: true
        CidrBlock: !FindInMap ['SubnetConfig', 'VPC', 'CIDR']
    
    PublicSubnetOne:
      Type: AWS::EC2::Subnet
      Properties:
        AvailablityZone: !Select
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
        VpcId: !Ref 'VPC'
        CidrBlock: !FindInMap ['SubnetConfig', 'PublicOne', 'CIDR']
        MapPublicIpOnLaunch: true
    
    PublicSubnetTwo:
      Type: AWS::EC2::Subnet
      Properties:
        AvailablityZone: !Select
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
        VpcId: !Ref 'VPC'
        CidrBlock: !FindInMap ['SubnetConfig', 'PublicTwo', 'CIDR']
        MapPublicIpOnLaunch: true
    
    PrivateSubnetOne:
      Type: AWS::EC2::Subnet
      Properties:
        AvailablityZone: !Select
          - 0
          - Fn::GetAZs: !Ref 'AWS::Region'
        VpcId: !Ref 'VPC'
        CidrBlock: !FindInMap ['SubnetConfig', 'PrivateOne', 'CIDR']
        MapPublicIpOnLaunch: true
    
    PrivateSubnetTwo:
      Type: AWS::EC2::Subnet
      Properties:
        AvailablityZone: !Select
          - 1
          - Fn::GetAZs: !Ref 'AWS::Region'
        VpcId: !Ref 'VPC'
        CidrBlock: !FindInMap ['SubnetConfig', 'PrivateTwo', 'CIDR']
        MapPublicIpOnLaunch: true

    InternetGateway:
      Type: